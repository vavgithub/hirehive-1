this is the code for duumy jobs feeed

// const jobData = {
    //     jobsPosted: 56,
    //     applicationsReceived: 45,
    //     activeJob: {
    //         title: 'Senior UI/UX designer',
    //         type: 'UI/UX',
    //         level: 'Senior-level',
    //         experience: 'Experienced',
    //         description: "We're seeking an experienced Senior UI/UX Designer to lead our design team in crafting seamless user experiences across our digital platforms. As a key player, you'll define design standards, mentor junior designers, and collaborate closely with stakeholders to translate business objectives into innovative design solutions.",
    //         applicationsCount: 156,
    //     },
    // };

{/* <div className="bg-white shadow rounded p-4 mb-4">
                <div className="flex justify-between items-center mb-2">
                    <h2 className="text-lg font-bold">{jobData.activeJob.title}</h2>
                    <div className="text-sm text-gray-500">posted 1 day ago</div>
                </div>
                <div className="flex mb-2">
                    <span className="bg-gray-200 text-gray-600 px-2 py-1 mr-2 rounded">{jobData.activeJob.type}</span>
                    <span className="bg-gray-200 text-gray-600 px-2 py-1 mr-2 rounded">{jobData.activeJob.level}</span>
                    <span className="bg-gray-200 text-gray-600 px-2 py-1 rounded">{jobData.activeJob.experience}</span>
                </div>
                <p className="text-gray-700 mb-4">{jobData.activeJob.description}</p>
                <div className="flex justify-between items-center">
                    <div className="text-gray-600">
                        <span className="font-bold">{jobData.activeJob.applicationsCount}</span> applied
                    </div>
                    <button className="bg-black text-white px-4 py-2 rounded">Know More</button>
                </div>
            </div> */}

       <!--  this is the filete code-->
       const FilterSidebar = () => {

        const [datePosted, setDatePosted] = useState('Anytime');
        const [jobType, setJobType] = useState({ fullTime: false, internship: false });
        const [experienceLevel, setExperienceLevel] = useState({ entry: false, intermediate: false, senior: false });
        const [jobFunction, setJobFunction] = useState({ design: false, engineering: false, sales: false, marketing: false });
    
        const handleCheckboxChange = (event, category, value) => {
            switch (category) {
                case 'jobType':
                    setJobType({ ...jobType, [value]: event.target.checked });
                    break;
                case 'experienceLevel':
                    setExperienceLevel({ ...experienceLevel, [value]: event.target.checked });
                    break;
                case 'jobFunction':
                    setJobFunction({ ...jobFunction, [value]: event.target.checked });
                    break;
                default:
                    break;
            }
        };
        
        return (
            <div className="bg-gray-100 p-4 rounded-md">
                <div className="mb-4">
                    <h3 className="text-gray-800 font-semibold mb-2 text-left">Date Posted</h3>
                    <select
                        className="w-full bg-white border border-gray-300 rounded-md py-2 px-3 text-gray-700"
                        value={datePosted}
                        onChange={(e) => setDatePosted(e.target.value)}
                    >
                        <option value="Anytime">Anytime</option>
                        <option value="Last 24 hours">Last 24 hours</option>
                        <option value="Last 7 days">Last 7 days</option>
                        <option value="Last 30 days">Last 30 days</option>
                    </select>
                </div>
    
                <div className="mb-4 text-left">
                    <h3 className="text-gray-800 font-semibold mb-2">Job Type</h3>
                    <div>
                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                checked={jobType.fullTime}
                                onChange={(e) => handleCheckboxChange(e, 'jobType', 'fullTime')}
                                className="form-checkbox text-indigo-600"
                            />
                            <span className="ml-2 text-gray-700">Full-time</span>
                        </label>
                    </div>
                    <div>
                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                checked={jobType.internship}
                                onChange={(e) => handleCheckboxChange(e, 'jobType', 'internship')}
                                className="form-checkbox text-indigo-600"
                            />
                            <span className="ml-2 text-gray-700">Internship</span>
                        </label>
                    </div>
                </div>
    
                <div className="mb-4 text-left">
                    <h3 className="text-gray-800 font-semibold mb-2">Exprience Level</h3>
                    <div>
                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                checked={experienceLevel.entry}
                                onChange={(e) => handleCheckboxChange(e, 'experienceLevel', 'entry')}
                                className="form-checkbox text-indigo-600"
                            />
                            <span className="ml-2 text-gray-700">Entry Level</span>
                        </label>
                    </div>
                    <div>
                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                checked={experienceLevel.intermediate}
                                onChange={(e) => handleCheckboxChange(e, 'experienceLevel', 'intermediate')}
                                className="form-checkbox text-indigo-600"
                            />
                            <span className="ml-2 text-gray-700">Intermediate</span>
                        </label>
                    </div>
                    <div>
                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                checked={experienceLevel.senior}
                                onChange={(e) => handleCheckboxChange(e, 'experienceLevel', 'senior')}
                                className="form-checkbox text-indigo-600"
                            />
                            <span className="ml-2 text-gray-700">Senior Level</span>
                        </label>
                    </div>
                </div>
    
                <div className="mb-4 text-left">
                    <h3 className="text-gray-800 font-semibold mb-2">Job Function</h3>
                    <div>
                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                checked={jobFunction.design}
                                onChange={(e) => handleCheckboxChange(e, 'jobFunction', 'design')}
                                className="form-checkbox text-indigo-600"
                            />
                            <span className="ml-2 text-gray-700">Design</span>
                        </label>
                    </div>
                    <div>
                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                checked={jobFunction.engineering}
                                onChange={(e) => handleCheckboxChange(e, 'jobFunction', 'engineering')}
                                className="form-checkbox text-indigo-600"
                            />
                            <span className="ml-2 text-gray-700">Engineering</span>
                        </label>
                    </div>
                    <div>
                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                checked={jobFunction.sales}
                                onChange={(e) => handleCheckboxChange(e, 'jobFunction', 'sales')}
                                className="form-checkbox text-indigo-600"
                            />
                            <span className="ml-2 text-gray-700">Sales</span>
                        </label>
                    </div>
                    <div>
                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                checked={jobFunction.marketing}
                                onChange={(e) => handleCheckboxChange(e, 'jobFunction', 'marketing')}
                                className="form-checkbox text-indigo-600"
                            />
                            <span className="ml-2 text-gray-700">Marketing</span>
                        </label>
                    </div>
                </div>
    
                <button className="bg-indigo-600 text-white px-4 py-2 rounded-md">Apply Filters</button>
            </div>
        );
    };3


    // this is the code for the creatin jobs
    <div className="max-w-2xl mx-auto py-10">
    <h2 className="text-3xl font-bold mb-6">Create a New Job Listing</h2>
    <p className="text-gray-600 mb-8">
        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsa natus nesciunt dignissimos. Rerum qui nulla
        incidunt Numquam et explicatur in soluta, quasi nisi.
    </p>

    <div className="mb-4 flex justify-between ">
        <div className='w-1/2 mr-2'>
            <label htmlFor="jobTitle" className="block font-bold mb-2">
                Job Title*
            </label>
            <input
                type="text"
                id="jobTitle"
                placeholder="Enter job title"
                className="w-full px-3 py-2 border border-gray-300 rounded"
            />
        </div>

        <div className='w-1/2 '>

            <label htmlFor="location" className="block font-bold mb-2">
                Location*
            </label>
            <input
                type="text"
                id="location"
                placeholder="Enter your location"
                className="w-full px-3 py-2 border border-gray-300 rounded"
            />
        </div>
    </div>

    <div className="mb-4">

    </div>

    <div className="mb-4 flex justify-between">
        <div className="w-1/3 mr-2">
            <label htmlFor="jobType" className="block font-bold mb-2">
                Job Type*
            </label>
            <select id="jobType" className="w-full px-3 py-2 border border-gray-300 rounded">
                <option value="">-Select-</option>
                <option value="fulltime">Full-time</option>
                <option value="internship">Internship</option>
                {/* Add job type options here */}
            </select>
        </div>

        <div className="w-1/3 mr-2">
            <label htmlFor="category" className="block font-bold mb-2">
                Category*
            </label>
            <select id="category" className="w-full px-3 py-2 border border-gray-300 rounded">
                <option value="">-Select-</option>
                <option value="sales">Sales</option>
                <option value="marketing">Marketing</option>
                <option value="engineering">Engineering</option>
                <option value="design">Design</option>
                {/* Add category options here */}
            </select>
        </div>

        <div className="w-1/3 mr-2">
            <label htmlFor="category" className="block font-bold mb-2">
                Experience Level*
            </label>
            <select id="category" className="w-full px-3 py-2 border border-gray-300 rounded">
                <option value="">-Select-</option>
                <option value="entry">Entry Level</option>
                <option value="intermediate">Intermediate</option>
                <option value="senior">Senior</option>
                {/* Add category options here */}
            </select>
        </div>
    </div>

    <div className="mb-4">
        <label htmlFor="jobDescription" className="block font-bold mb-2">
            Job Description*
        </label>
        <textarea
            id="jobDescription"
            placeholder="Write a job description"
            className="w-full px-3 py-2 border border-gray-300 rounded"
            rows="4"
        ></textarea>
    </div>

    <div className="mb-8">
        <label htmlFor="jobRequirements" className="block font-bold mb-2">
            Job Requirements*
        </label>
        <textarea
            id="jobRequirements"
            placeholder="Write a job requirements"
            className="w-full px-3 py-2 border border-gray-300 rounded"
            rows="4"
        ></textarea>
    </div>

    <div className="flex justify-end">
        <button className="bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded mr-2">
            Create Job Listing
        </button>
        <button className="bg-gray-200 hover:bg-gray-300 text-gray-700 font-bold py-2 px-4 rounded">
            Save for Later
        </button>
    </div>
</div>



{/* Job Fucntionining */}
{/* 
            <div className="mb-4 text-left">
                <h3 className="text-gray-800 font-semibold mb-2">Job Function</h3>

                <div>

                    <div className='flex justify-between'>
                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                value="design"
                                checked={filters.category.includes('design')}
                                onChange={() => handleCheckboxChange('category', 'design')}
                                disabled={isDisabled}
                            />
                            <span className={`ml-2 ${textColor}`}>Design</span>
                        </label>
                        <p className={`ml-2 ${textColor}`}>{statistics.totalDesignJobs || 0}</p>
                    </div>

                </div>
                <div>
                    <div className='flex justify-between'>

                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                value="engineering"
                                checked={filters.category.includes('engineering')}
                                onChange={() => handleCheckboxChange('category', 'engineering')}
                                disabled={isDisabled}
                            />
                            <span className={`ml-2 ${textColor}`}>Engineering</span>
                        </label>
                        <p className={`ml-2 ${textColor}`}>{statistics.totalEngineeringJobs || 0}</p>
                    </div>
                </div>
                <div>
                    <div className='flex justify-between'>
                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                value="sales"
                                checked={filters.category.includes('sales')}
                                onChange={() => handleCheckboxChange('category', 'sales')}
                                disabled={isDisabled}
                            />
                            <span className={`ml-2 ${textColor}`}>Sales</span>
                        </label>
                        <p className={`ml-2 ${textColor}`}>{statistics.totalSalesJobs || 0}</p>
                    </div>
                </div>
                <div>
                    <div className='flex justify-between'>
                        <label className="inline-flex items-center">
                            <input
                                type="checkbox"
                                value="marketing"
                                checked={filters.category.includes('marketing')}
                                onChange={() => handleCheckboxChange('category', 'marketing')}
                                disabled={isDisabled}
                            />
                            <span className={`ml-2 ${textColor}`}>Marketing</span>
                        </label>
                        <p className={`ml-2 ${textColor}`}>{statistics.totalMarketingJobs || 0}</p>
                    </div>
                </div>
            </div> */}





            {activeTab === 'active' &&
            activeJobs.map((job) => (
                <div key={job._id} className="bg-white shadow rounded p-2 mb-4 w-full group relative overflow-hidden h-auto">
                    <div className='flex justify-between items-center'>
                        <h2 className="text-lg font-bold">{job.title}</h2>
                        <div className='flex gap-2 absolute right-0 top-0 bottom-0 translate-x-full group-hover:translate-x-0 p-2' >
                            <div className='h-6 w-6 overflow-hidden items-center flex justify-center'>
                                <button onClick={() => handleAction('delete', job._id)} className="text-black rounded m-1"><DeleteIcon /></button>
                            </div>
                            <div className='h-6 w-6 overflow-hidden items-center flex justify-center'>
                                <button onClick={() => handleAction('edit', job._id)} className="text-black rounded m-1"><EditIcon /></button>
                            </div>
                            <div className='h-6 w-6 overflow-hidden items-center flex justify-center'>
                                <button onClick={() => handleAction('archive', job._id)} className="text-black rounded m-1"><ArchiveIcon /></button>
                            </div>
                        </div>
                    </div>
                    <p className="text-gray-700 mb-4 w-[90%] h-[60px]">{job.description}</p>
                    <div className="flex justify-between items-center pt-2 border-t-2">
                        <div className="text-gray-600">
                            <span className="font-bold">{job.applicationsCount}</span> applied
                        </div>
                        {/* <button onClick={handleKnowMore(jobs._id)} className="bg-black text-white px-4 py-2 rounded">Know More</button> */}
                        <Link to={`/admin/view-job/${job._id}`} className="bg-black text-white px-4 py-2 rounded-[70px] flex items-center gap-1 z-10">Know More <ArrowIcon /> </Link>
                    </div>
                </div>
            ))
        }
        {activeTab === 'draft' &&
            draftJobs.map((job) => (
                <div key={job._id} className="bg-white shadow rounded p-4 mb-4 w-full group relative overflow-hidden h-auto">
                    <div className='flex justify-between items-center'>
                        <h2 className="text-lg font-bold">{job.title}</h2>
                        <div className='flex gap-2 absolute right-0 top-0 bottom-0 translate-x-full group-hover:translate-x-0 p-2' >
                            <div className='h-6 w-6 overflow-hidden items-center flex justify-center'>
                                <button onClick={() => handleAction('delete', job._id)} className="text-black rounded m-1"><DeleteIcon /></button>
                            </div>
                            <div className='h-6 w-6 overflow-hidden items-center flex justify-center'>
                                <button onClick={() => handleAction('edit', job._id)} className="text-black rounded m-1"><EditIcon /></button>
                            </div>
                        </div>
                    </div>
                    <p className="text-gray-700 mb-4 w-[90%]" style={{ width: "90%" }}>{job.description}</p>
                    <div className="flex justify-between items-center pt-4">
                        <div className="text-gray-600">
                            <span className="font-bold">{job.applicationsCount}</span> applied
                        </div>
                        <Link to={`/job/${job._id}`} className="bg-black text-white px-4 py-2 rounded">Know More</Link>
                    </div>
                </div>
            ))}
        {activeTab === 'archived' &&
            archivedJobs.map((job) => (

                <div key={job._id} className="bg-white shadow rounded p-4 mb-4 w-full group relative overflow-hidden h-auto">
                    <div className='flex justify-between items-center'>
                        <h2 className="text-lg font-bold">{job.title}</h2>
                        <div className='flex gap-2 absolute right-0 top-0 bottom-0 translate-x-full group-hover:translate-x-0 p-2' >
                            <div className='h-6 w-6 overflow-hidden items-center flex justify-center'>
                                <button onClick={() => handleAction('delete', job._id)} className="text-black rounded m-1"><DeleteIcon /></button>
                            </div>
                            <div className='h-6 w-6 overflow-hidden items-center flex justify-center'>
                                <button onClick={() => handleAction('edit', job._id)} className="text-black rounded m-1"><EditIcon /></button>
                            </div>
                        </div>
                    </div>

                    <p className="text-gray-700 mb-4 w-[90%]">{job.description}</p>


                    <div className="flex justify-between items-center pt-4">
                        <div className="text-gray-600">
                            <span className="font-bold">{job.applicationsCount}</span> applied
                        </div>
                        <Link to={`/view-jobs/${job._id}`} className="bg-black text-white px-4 py-2 rounded">Know More</Link>
                    </div>
                </div>
            ))}



            const rows = [
                { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 , status: 'Hired'},
                { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },
                { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },
                { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },
                { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },
                { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },
                { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },
                { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },
                { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },
              ];